#!/usr/bin/env node
'use strict';

var makeAnalyser = require('../src/data');
var readingTime  = require('../src/utils/reading-time');
var display = require('../src/ui');

var meow = require('meow');
var blessed = require('blessed');
var Twitter = require('node-tweet-stream');
var stream = new Twitter({
    consumer_key:    process.env.CONSUMER_KEY,
    consumer_secret: process.env.CONSUMER_SECRET,
    token:           process.env.ACCESS_TOKEN,
    token_secret:    process.env.ACCESS_SECRET,
});

var cli = meow(`
    Usage
      $ sentiment <query>...

    Examples
      $ sentiment trump
`);
var queries = cli.input;
if (!queries.length) {
    cli.showHelp(1);
}

var analyse = makeAnalyser();
var screen = blessed.screen({
    smartCSR: true,
    fullUnicode: true,
});

var title   = require('../src/components/title')(screen, queries);
var summary = require('../src/components/summary')(screen);
var latest  = require('../src/components/latest')(screen);
var worst   = require('../src/components/worst')(screen);

var best = blessed.Box({
    top: 5 + 1,
    left: 0,
    width: '50%',
    height: 10,
    padding: {left: 1, right: 1},
    border: { type: 'line' },
});

screen.append(best);
screen.render();

var queryString = queries.join(', ');
queries.forEach(query => stream.track(query));

screen.key(['C-c', 'Q'], (ch, key) => {
    stream.abort();
    process.exit(1);
});

stream.on('tweet', tweet => {
    var r = analyse(tweet);
    title();
    summary(r);
    best.setContent(display.best(r.best));
    worst(r);
    latest(r);
    screen.render();
});
